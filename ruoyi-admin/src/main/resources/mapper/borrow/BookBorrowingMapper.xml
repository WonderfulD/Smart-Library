<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.borrow.mapper.BookBorrowingMapper">
    
    <resultMap type="BookBorrowing" id="BookBorrowingResult">
        <result property="borrowId"    column="borrow_id"    />
        <result property="bookId"    column="book_id"    />
        <result property="readerId"    column="reader_id"    />
        <result property="libraryId"    column="library_id"    />
        <result property="borrowDate"    column="borrow_date"    />
        <result property="dueDate"    column="due_date"    />
        <result property="returnDate"    column="return_date"    />
        <result property="fine"    column="fine"    />
        <result property="comments"    column="comments"    />
        <result property="status"    column="status"    />
    </resultMap>

    <sql id="selectBookBorrowingVo">
        select borrow_id, book_id, reader_id, library_id, borrow_date, due_date, return_date, fine, comments, status from BookBorrowing
    </sql>

    <select id="selectBookBorrowingList" parameterType="BookBorrowing" resultMap="BookBorrowingResult">
        <include refid="selectBookBorrowingVo"/>
        <where>  
            <if test="borrowId != null "> and borrow_id = #{borrowId}</if>
            <if test="bookId != null "> and book_id = #{bookId}</if>
            <if test="readerId != null "> and reader_id = #{readerId}</if>
            <if test="borrowDate != null "> and borrow_date = #{borrowDate}</if>
            <if test="dueDate != null "> and due_date = #{dueDate}</if>
        </where>
    </select>
    
    <select id="selectBookBorrowingByBorrowId" parameterType="Long" resultMap="BookBorrowingResult">
        <include refid="selectBookBorrowingVo"/>
        where borrow_id = #{borrowId}
    </select>
        
    <insert id="insertBookBorrowing" parameterType="BookBorrowing" useGeneratedKeys="true" keyProperty="borrowId">
        insert into BookBorrowing
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="borrowId != null">borrow_id,</if>
            <if test="bookId != null">book_id,</if>
            <if test="readerId != null">reader_id,</if>
            <if test="libraryId != null">library_id,</if>
            <if test="borrowDate != null">borrow_date,</if>
            <if test="dueDate != null">due_date,</if>
            <if test="returnDate != null">return_date,</if>
            <if test="fine != null">fine,</if>
            <if test="comments != null">comments,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="borrowId != null">#{borrowId},</if>
            <if test="bookId != null">#{bookId},</if>
            <if test="readerId != null">#{readerId},</if>
            <if test="libraryId != null">#{libraryId},</if>
            <if test="borrowDate != null">#{borrowDate},</if>
            <if test="dueDate != null">#{dueDate},</if>
            <if test="returnDate != null">#{returnDate},</if>
            <if test="fine != null">#{fine},</if>
            <if test="comments != null">#{comments},</if>
         </trim>
    </insert>

    <update id="updateBookBorrowing" parameterType="BookBorrowing">
        update BookBorrowing
        <trim prefix="SET" suffixOverrides=",">
            <if test="bookId != null">book_id = #{bookId},</if>
            <if test="readerId != null">reader_id = #{readerId},</if>
            <if test="libraryId != null">library_id = #{libraryId},</if>
            <if test="borrowDate != null">borrow_date = #{borrowDate},</if>
            <if test="dueDate != null">due_date = #{dueDate},</if>
            <if test="returnDate != null">return_date = #{returnDate},</if>
            <if test="fine != null">fine = #{fine},</if>
            <if test="comments != null">comments = #{comments},</if>
        </trim>
        where borrow_id = #{borrowId}
    </update>

    <delete id="deleteBookBorrowingByBorrowId" parameterType="Long">
        delete from BookBorrowing where borrow_id = #{borrowId}
    </delete>

    <delete id="deleteBookBorrowingByBorrowIds" parameterType="String">
        delete from BookBorrowing where borrow_id in 
        <foreach item="borrowId" collection="array" open="(" separator="," close=")">
            #{borrowId}
        </foreach>
    </delete>

    <select id="selectBookBorrowingListByDept" parameterType="BookBorrowing" resultMap="BookBorrowingResult">
        <include refid="selectBookBorrowingVo"/>
        <where>
            <if test="libraryId != null"> AND library_id = #{libraryId}</if>
            <if test="borrowId != null "> AND borrow_id = #{borrowId}</if>
            <if test="bookId != null "> AND book_id = #{bookId}</if>
            <if test="readerId != null "> AND reader_id = #{readerId}</if>
            <if test="borrowDate != null "> AND borrow_date = #{borrowDate}</if>
            <if test="dueDate != null "> AND due_date = #{dueDate}</if>
        </where>
    </select>

    <select id="selectBookBorrowingListByReaderId" parameterType="BookBorrowing" resultMap="BookBorrowingResult">
        <include refid="selectBookBorrowingVo"/>
        <where>
            <if test="libraryId != null"> AND library_id = #{libraryId}</if>
            <if test="borrowId != null "> AND borrow_id = #{borrowId}</if>
            <if test="bookId != null "> AND book_id = #{bookId}</if>
            <if test="readerId != null "> AND reader_id = #{readerId}</if>
            <if test="borrowDate != null "> AND borrow_date = #{borrowDate}</if>
            <if test="dueDate != null "> AND due_date = #{dueDate}</if>
        </where>
    </select>


</mapper>